self.addEventListener("push",(function(t){let n={title:"Story App",body:"You have a new notification!",icon:"/images/logo.png",badge:"/images/logo.png",data:{url:"/"}};if(t.data)try{const i=t.data.json();i.title&&(n.title=i.title),i.options&&i.options.body&&(n.body=i.options.body),i.icon&&(n.icon=i.icon),i.badge&&(n.badge=i.badge),i.data&&(n.data=i.data)}catch(t){console.log("Could not parse push data, using default")}const i={body:n.body,icon:n.icon,badge:n.badge,data:n.data,requireInteraction:!0,actions:[{action:"open",title:"Open App",icon:"/images/logo.png"},{action:"close",title:"Close",icon:"/images/logo.png"}]};t.waitUntil(self.registration.showNotification(n.title,i))})),self.addEventListener("notificationclick",(function(t){t.notification.close(),"close"!==t.action&&t.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((function(t){for(let n=0;n<t.length;n++){const i=t[n];if(i.url.includes(self.location.origin)&&"focus"in i)return i.focus()}if(clients.openWindow)return clients.openWindow("/")})))})),self.addEventListener("notificationclose",(function(t){console.log("Notification closed:",t)})),self.addEventListener("install",(function(t){self.skipWaiting()})),self.addEventListener("activate",(function(t){t.waitUntil(self.clients.claim())}));